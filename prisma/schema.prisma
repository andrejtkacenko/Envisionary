// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String?  @unique
  displayName String?
  telegramId  Int?     @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  goals          Goal[]
  tasks          Task[]
  notifications  Notification[]
  goalTemplates  GoalTemplate[]
  scheduleTemplates ScheduleTemplate[]
}

model Goal {
  id            String      @id @default(cuid())
  title         String
  description   String?     @db.Text
  status        String      @default("todo") // "todo", "inprogress", "done", "ongoing"
  priority      String      @default("medium") // "low", "medium", "high"
  category      String      @default("General")
  dueDate       DateTime?
  estimatedTime String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  user    User   @relation(fields: [userId], references: [id])
  userId  String

  parent   Goal?  @relation("SubGoals", fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?
  subGoals Goal[] @relation("SubGoals")
}

model Task {
  id           String    @id @default(cuid())
  title        String
  description  String?   @db.Text
  priority     String    @default("p4") // "p1", "p2", "p3", "p4"
  isCompleted  Boolean   @default(false)
  dueDate      DateTime?
  time         String?   // "HH:mm" format
  duration     Int?      // in minutes
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  user    User   @relation(fields: [userId], references: [id])
  userId  String

  parent   Task?  @relation("SubTasks", fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?
  subTasks Task[] @relation("SubTasks")
}

model Notification {
  id          String   @id @default(cuid())
  title       String
  description String
  type        String   @default("info") // "important", "reminder", "info"
  isRead      Boolean  @default(false)
  link        String?
  createdAt   DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model GoalTemplate {
  id          String   @id @default(cuid())
  title       String
  description String?  @db.Text
  category    String
  subGoals    Json     // Store sub-goals as a JSON object
  likes       Int      @default(0)
  createdAt   DateTime @default(now())
  
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  authorName String
}

model ScheduleTemplate {
    id        String   @id @default(cuid())
    name      String
    schedule  Json     // Store the array of DailySchedule as JSON
    createdAt DateTime @default(now())
    
    author    User   @relation(fields: [authorId], references: [id])
    authorId  String
}
