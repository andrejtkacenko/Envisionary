// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(cuid())
  email           String?        @unique
  displayName     String?
  telegramId      Int?           @unique
  firebaseUid     String         @unique
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  goals           Goal[]
  tasks           Task[]
  notifications   Notification[]
  goalTemplates   GoalTemplate[]
  scheduleTemplates ScheduleTemplate[]
}

model Goal {
  id            String       @id @default(cuid())
  title         String
  description   String?
  status        String       @default("todo")
  priority      String       @default("medium")
  category      String       @default("General")
  dueDate       DateTime?
  estimatedTime String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  user          User         @relation(fields: [userId], references: [id])
  userId        String
  parent        Goal?        @relation("GoalSubGoals", fields: [parentId], references: [id], onDelete: Cascade)
  parentId      String?
  subGoals      Goal[]       @relation("GoalSubGoals")
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  priority    String    @default("p4")
  dueDate     DateTime?
  time        String?
  duration    Int?
  isCompleted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  parent      Task?     @relation("TaskSubTasks", fields: [parentId], references: [id], onDelete: Cascade)
  parentId    String?
  subTasks    Task[]    @relation("TaskSubTasks")
}

model Notification {
  id          String   @id @default(cuid())
  title       String
  description String
  type        String
  isRead      Boolean  @default(false)
  link        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model GoalTemplate {
  id          String   @id @default(cuid())
  title       String
  description String?
  category    String
  subGoals    Json
  authorName  String
  likes       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [authorId], references: [id])
  authorId    String?
}

model ScheduleTemplate {
  id        String   @id @default(cuid())
  name      String
  schedule  Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [authorId], references: [id])
  authorId  String
}
